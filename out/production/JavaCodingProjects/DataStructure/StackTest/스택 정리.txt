자료구조
1. 스택(Stack)
데이터를 제한적으로 접근할 수 있는 구조
한쪽 끝에서만 자료를 넣거나 뺄 수 있는 구조
가장 나중에 쌓은 데이터를 가장 먼저 빼낼 수 있는 데이터 구조
스택 : LIFO 정책
큐   : FIFO 정책

※ 스택 구조
대표적인 스택의 활용 : 컴퓨터 내부의 프로세스 구조의 함수 동작 방식 (재귀 방식)

※ 주요 기능
push() : 데이터를 스택에 넣기
pop()  : 데이터를 스택에서 꺼내기

https://visualgo.net/en/list

※ 자료 구조 스택 장단점
장점
구조가 단순해서, 구현이 쉽다.
데이터 저장/읽기 속도가 빠르다.

단점(일반적인 스택 구현 시)
데이터 최대 갯수를 미리 정해야 한다.
저장 공간의 낭비가 발생할 수 있다. (미리 최대 갯수만큼 저장 공간을 확보해야 함)

스택은 단순하고 빠른 성능을 위해 사용되며, 보통 배열 구조를 활용해서 구현하는 것이
일반적임. 이경우, 위에서 열거한 단점이 있을 수 있음

※ 스택 선언
import java.util.Stack;

Stack<Integer> stack_int = new Stack<Integer>();

※ 스택 삽입
stack_int.push(1);
stack_int.push(2);
stack_int.push(3);

※ 스택 삭제
stack_int.pop(); // 3
